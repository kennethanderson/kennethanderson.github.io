#Title: Ken Anderson
hasimg: true
Sections:
- Title: Fast Path Planning
  Content: |
    <div class="paragraph"><p>Since 2012, I have participated in the annual grid-based path planning competition (GPPC). My entry, Tree Cache, combines search-based algorithms, fast lookups, and an extremely well-considered implementation. I have held the fastest entry for two years running.</p></div>
  Image: "images/bg.png"
  
- Title: Additive Heuristic
  Content: |
    <div class="paragraph"><p>In 2010, I created a new memory-based, additive heuristic that can be used on the four-connected gridworld.  A given graph is abstracted into two significantly smaller abstract graphs, who&#8217;s primary components lie in either the x or y dimension.  These graphs are searched on-demand, and the solution costs are added together to create the heuristic for the original graph.</p></div>
    <div class="paragraph"><p>When used with A* search, this heuristic reduces the number of expanded nodes by up to five times and reduces execution time by up to 29 times over the Manhattan Distance heuristic. Because of the low-cost of updating the abstract graphs, this technique is proposed for use in dynamically-changing graphs.  This work was published in SOCS 2010.</p></div>
  Image: "images/additiveHeuristic.png"
  
- Title: Data Fusion
  Content: |
    <div class="paragraph"><p>At Larus Technologies, I developed intelligent algorithms for real-time data analysis in the personal health monitoring domain.  Nexus provided analytical information for patients (and their doctors) who used a non-invasive blood pressure monitor.  This technology trains, clusters and classifies personal health datasets, then classifies new data, predicts anomalies and generates appropriate warnings. Additionally, I investigated intelligent sampling strategies for sensor networks.  Wireless sensors have to be very careful with managing the use of power as they are often powered only by battery or a solar array.  Therefore, strategies that reduce the usage of power, while still retaining near real-time data flow are of great importance.  I created and implemented such algorithms for use in environmental monitoring.</p></div>
  Image: "images/tempSensor.png"
  
- Title: Single-Agent-Search
  Content: |
    <div class="paragraph"><p>As a member of the GAMES Group at the University of Alberta, I worked on single-agent-search for my thesis. Single-agent-search encompasses problems that can be formulated as finding a minimal-cost path through a weighted, directed graph from a start node to a goal node. Some examples include GPS navigation, path-finding in video games, robot-motion planning, general planning, DNA sequence alignment, and my favorite-- puzzles.</p></div>
    <div class="paragraph"><p>Search progresses from a start node and expands connected nodes until the goal is found. A heuristic is an estimate of the distance of some node to the goal node. We can use this information to speed up search by eliminating unnecessary node expansions. Some classic algorithms that do this are A* and IDA*.</p></div>
    <div class="paragraph"><p>My research investigated the use of memory and abstraction in providing a heuristic for this search. The domains I used were two puzzle domains: the K-pancake puzzle and the 15 sliding-tile puzzle. In these domains, I reduced the average number of nodes generated by 3-fold and 27% respectively.</p></div>
  Image: "images/fifteen.jpg"
  
- Title: Real-Time Search
  Content: |
    <div class="paragraph"><p>With Chris Rayner, Kate Davison, et al., I investigated real-time search algorithms. My primary focus was the theoretical analysis of the complexity of various real-time search algorithms. This work was incorporated into an IJCAI paper.</p></div>
  Image: "images/maps.jpg"
  
- Title: Real-Time Strategy
  Content: |
    <div class="paragraph"><p>Dr. Michael Buro and I examined low-level combat in real-time strategy (RTS) games. The aim of this work was to automate low-level combat, thereby releasing the human from &#8216;baby sitting&#8217; her troops during game play. We theoretically and empirically analyzed a simplified N-by-M tank combat scenario to determine the best target selection algorithm.  After determining the best strategy in our simplified scenario, we expanded the scope and incorporated our target selection strategy into the University of Alberta&#8217;s entry to the 2006 ORTS RTS Game AI Competition.  We won 1st place in the Tank Combat Tournament.</p></div>
  Image: "images/realTime2.jpg"
  
- Title: Pool Strategy
  Content: |
    <div class="paragraph"><p>At Queen&#8217;s University, I studied the simplified shot strategies for Deep Green&#8482;, a pool playing robot. I created an AI engine to generate, analyse, and choose potential shots in a game of 8-ball.  This incorporated collision detection techniques, a ranking algorithm, and integration to the robotic system.  Testing validated the approach, showing that 80% of the shots chosen by the strategy engine were the same as those chosen by experienced pool players.</p></div>
  Image: "images/poolsim.png"

